function data = Import_DataFile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [T,V_E,V_I,NU_E,NU_I,MU_EXT_E,MU_EXT_I,VARNAME8,VARNAME9,VARNAME10,VARNAME11,MU_E,MU_I,VARNAME14,VARNAME15,SIGMA_E,SIGMA_I]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [T,V_E,V_I,NU_E,NU_I,MU_EXT_E,MU_EXT_I,VARNAME8,VARNAME9,VARNAME10,VARNAME11,MU_E,MU_I,VARNAME14,VARNAME15,SIGMA_E,SIGMA_I]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [t,V_E,V_I,nu_E,nu_I,mu_Ext_E,mu_Ext_I,VarName8,VarName9,VarName10,VarName11,mu_E,mu_I,VarName14,VarName15,sigma_E,sigma_I] = importfile('LIFNetwork_Data.dat',25, 35);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2017/10/20 15:40:50

%% Initialize variables.
delimiter = {'\t',' '};
if nargin<=2
    startRow = 26;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
data.t = dataArray{:, 1};
data.V{1} = dataArray{:, 2};
data.V{2} = dataArray{:, 3};
data.nu{1} = dataArray{:, 4};
data.nu{2} = dataArray{:, 5};
data.mu_Ext{1} = dataArray{:, 6};
data.mu_Ext{2} = dataArray{:, 7};
VarName8 = dataArray{:, 8};
VarName9 = dataArray{:, 9};
VarName10 = dataArray{:, 10};
VarName11 = dataArray{:, 11};
data.mu{1} = dataArray{:, 12};
data.mu{2} = dataArray{:, 13};
VarName14 = dataArray{:, 14};
VarName15 = dataArray{:, 15};
data.sigma{1} = dataArray{:, 16};
data.sigma{2} = dataArray{:, 17};


filename_parameters = [filename(1:end-8),'Parameters.txt'];

data.params = Import_Parameters(filename_parameters);
